@import '../mixins/utility';
@import 'mixins';

@if $bounceUsed {
  @include keyframe(bounce) {
    from, 20%, 53%, 80%, to {
      animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      @include translate(0, 0, 0);
    }

    40%, 43% {
      animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
      @include translate(0, -30px, 0);
    }

    70% {
      animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
      @include translate(0, -15px, 0);
    }

    90% {
      @include translate(0, -4px, 0);
    }
  }
}

@if $flashUsed {
  @include keyframe(flash) {
    from, 50%, to {
      opacity: 1;
    }

    25%, 75% {
      opacity: 0;
    }
  }
}

@if $pulseUsed {
  @include keyframe(pulse) {
    from {
      @include scale(1, 1, 1);
    }

    50% {
      @include scale(1.05, 1.05, 1.05);
    }

    to {
      @include scale(1, 1, 1);
    }
  }
}

@if $rubberBandUsed {
  @include keyframe(rubberBand) {
    from {
      @include scale(1, 1, 1);
    }

    30% {
      @include scale(1.25, 0.75, 1);
    }

    40% {
      @include scale(0.75, 1.25, 1);
    }

    50% {
      @include scale(1.15, 0.85, 1);
    }

    65% {
      @include scale(.95, 1.05, 1);
    }

    75% {
      @include scale(1.05, .95, 1);
    }

    to {
      @include scale(1, 1, 1);
    }
  }
}

@if $shakeUsed {
  @include keyframe(shake) {
    from, to {
      @include translate(0, 0, 0);
    }

    10%, 30%, 50%, 70%, 90% {
      @include translate(-10px, 0, 0);
    }

    20%, 40%, 60%, 80% {
      @include translate(10px, 0, 0);
    }
  }
}

@if $headShakeUsed {
  @include keyframe(headShake) {
    0% {
      @include translate(0, 0, 0);
    }

    6.5% {
      @include transform(translateX(-6px) rotateY(-9deg));
    }

    18.5% {
      @include transform(translateX(5px) rotateY(7deg));
    }

    31.5% {
      @include transform(translateX(-3px) rotateY(-5deg));
    }

    43.5% {
      @include transform(translateX(2px) rotateY(3deg));
    }

    50% {
      @include transform(translateX(0));
    }
  }
}

@if $swingUsed {
  @include keyframe(swing) {
    20% {
      @include transform(rotate3d(0, 0, 1, 15deg));
    }

    40% {
      @include transform(rotate3d(0, 0, 1, -10deg));
    }

    60% {
      @include transform(rotate3d(0, 0, 1, 5deg));
    }

    80% {
      @include transform(rotate3d(0, 0, 1, -5deg));
    }

    to {
      @include transform(rotate3d(0, 0, 1, 0deg));
    }
  }
}

@if $tadaUsed {
  @include keyframe(tada) {
    from {
      @include transform(scale3d(1, 1, 1));
    }

    10%, 20% {
      @include transform(scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg));
    }

    30%, 50%, 70%, 90% {
      @include transform(scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg));
    }

    40%, 60%, 80% {
      @include transform(scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg));
    }

    to {
      @include transform(scale3d(1, 1, 1));
    }
  }
}

@if $wobbleUsed {
  @include keyframe(wobble) {
    from {
      @include transform(none);
    }

    15% {
      @include transform(translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg));
    }

    30% {
      @include transform(translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg));
    }

    45% {
      @include transform(translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg));
    }

    60% {
      @include transform(translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg));
    }

    75% {
      @include transform(translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg));
    }

    to {
      @include transform(none);
    }
  }
}

@if $jelloUsed {
  @include keyframe(jello) {
    from, 11.1%, to {
      @include transform(none);
    }

    22.2% {
      @include transform(skewX(-12.5deg) skewY(-12.5deg));
    }

    33.3% {
      @include transform(skewX(6.25deg) skewY(6.25deg));
    }

    44.4% {
      @include transform(skewX(-3.125deg) skewY(-3.125deg));
    }

    55.5% {
      @include transform(skewX(1.5625deg) skewY(1.5625deg));
    }

    66.6% {
      @include transform(skewX(-0.78125deg) skewY(-0.78125deg));
    }

    77.7% {
      @include transform(skewX(0.390625deg) skewY(0.390625deg));
    }

    88.8% {
      @include transform(skewX(-0.1953125deg) skewY(-0.1953125deg));
    }
  }
}

@if $bounceInUsed {
  @include keyframe(bounceIn) {
    from, 20%, 40%, 60%, 80%, to {
      animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    }

    0% {
      opacity: 0;
      @include transform(scale3d(.3, .3, .3));
    }

    20% {
      @include transform(scale3d(1.1, 1.1, 1.1));
    }

    40% {
      @include transform(scale3d(.9, .9, .9));
    }

    60% {
      opacity: 1;
      @include transform(scale3d(1.03, 1.03, 1.03));
    }

    80% {
      @include transform(scale3d(.97, .97, .97));
    }

    to {
      opacity: 1;
      @include transform(scale3d(1, 1, 1));
    }
  }
}

@if $bounceInDownUsed {
  @include keyframe(bounceInDown) {
    from, 60%, 75%, 90%, to {
      animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    }

    0% {
      opacity: 0;
      @include transform(translate3d(0, -3000px, 0));
    }

    60% {
      opacity: 1;
      @include transform(translate3d(0, 25px, 0));
    }

    75% {
      @include transform(translate3d(0, -10px, 0));
    }

    90% {
      @include transform(translate3d(0, 5px, 0));
    }

    to {
      @include transform(none);
    }
  }
}

@if $bounceInLeftUsed {
  @include keyframe(bounceInLeft) {
    from, 60%, 75%, 90%, to {
      animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    }

    0% {
      opacity: 0;
      @include transform(translate3d(-3000px, 0, 0));
    }

    60% {
      opacity: 1;
      @include transform(translate3d(25px, 0, 0));
    }

    75% {
      @include transform(translate3d(-10px, 0, 0));
    }

    90% {
      @include transform(translate3d(5px, 0, 0));
    }

    to {
      @include transform(none);
    }
  }
}

@if $bounceInRightUsed {
  @include keyframe(bounceInRight) {
    from, 60%, 75%, 90%, to {
      animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    }

    from {
      opacity: 0;
      @include transform(translate3d(3000px, 0, 0));
    }

    60% {
      opacity: 1;
      @include transform(translate3d(-25px, 0, 0));
    }

    75% {
      @include transform(translate3d(10px, 0, 0));
    }

    90% {
      @include transform(translate3d(-5px, 0, 0));
    }

    to {
      @include transform(none);
    }
  }
}

@if $bounceOutUsed {
  @include keyframe(bounceOut) {
    20% {
      @include scale(.9, .9, .9);
    }

    50%, 55% {
      opacity: 1;
      @include scale(1.1, 1.1, 1.1);
    }

    to {
      opacity: 0;
      @include scale(.3, .3, .3);
    }
  }
}

@if $bounceInUpUsed {
  @include keyframe(bounceInUp) {
    from, 60%, 75%, 90%, to {
      animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    }

    from {
      opacity: 0;
      @include translate(0, 3000px, 0);
    }

    60% {
      opacity: 1;
      @include translate(0, -20px, 0);
    }

    75% {
      @include translate(0, 10px, 0);
    }

    90% {
      @include translate(0, -5px, 0);
    }

    to {
      @include translate(0, 0, 0);
    }
  }
}

@if $bounceOutDownUsed {
  @include keyframe(bounceOutDown) {
    20% {
      @include translate(0, 10px, 0);
    }

    40%, 45% {
      opacity: 1;
      @include translate(0, -20px, 0);
    }

    to {
      opacity: 0;
      @include translate(0, 2000px, 0);
    }
  }
}

@if $bounceOutLeftUsed {
  @include keyframe(bounceOutLeft) {
    20% {
      opacity: 1;
      @include translate(20px, 0, 0);
    }

    to {
      opacity: 0;
      @include translate(-2000px, 0, 0);
    }
  }
}

@if $bounceOutUpUsed {
  @include keyframe(bounceOutUp) {
    20% {
      @include translate(0, -10px, 0);
    }

    40%, 45% {
      opacity: 1;
      @include translate(0, 20px, 0);
    }

    to {
      opacity: 0;
      @include translate(0, -2000px, 0);
    }
  }
}

@if $bounceOutRightUsed {
  @include keyframe(bounceOutRight) {
    20% {
      opacity: 1;
      @include translate(-20px, 0, 0);
    }

    to {
      opacity: 0;
      @include translate(2000px, 0, 0);
    }
  }
}

@if $fadeInDownBigUsed {
  @include keyframe(fadeInDownBig) {
    from {
      opacity: 0;
      @include translate(0, -2000px, 0);
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $fadeInLeftUsed {
  @include keyframe(fadeInLeft) {
    from {
      opacity: 0;
      @include translate(-100%, 0, 0);
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $slideOutUpUsed {
  @include keyframe(slideOutUp) {
    from {
      @include translate(0, 0, 0);
    }

    to {
      visibility: hidden;
      @include translate(0, -100%, 0);
    }
  }
}

@if $slideOutRightUsed {
  @include keyframe(slideOutRight) {
    from {
      @include translate(0, 0, 0);
    }

    to {
      visibility: hidden;
      @include translate(100%, 0, 0);
    }
  }
}

@if $fadeInRightBigUsed {
  @include keyframe(fadeInRightBig) {
    from {
      opacity: 0;
      @include translate(2000px, 0, 0);
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $fadeInUsed {
  @include keyframe(fadeIn) {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
}

@if $fadeInLeftBigUsed {
  @include keyframe(fadeInLeftBig) {
    from {
      opacity: 0;
      @include translate(-2000px, 0, 0);
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $fadeInDownUsed {
  @include keyframe(fadeInDown) {
    from {
      opacity: 0;
      @include translate(0, -100%, 0);
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $fadeInRightUsed {
  @include keyframe(fadeInRight) {
    from {
      opacity: 0;
      @include translate(100%, 0, 0);
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $fadeInUpUsed {
  @include keyframe(fadeInUp) {
    from {
      opacity: 0;
      @include translate(0, 20px, 0);
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $fadeInUpBigUsed {
  @include keyframe(fadeInUpBig) {
    from {
      opacity: 0;
      @include translate(0, 2000px, 0);
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $fadeOutUsed {
  @include keyframe(fadeOut) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
    }
  }
}

@if $fadeOutDownUsed {
  @include keyframe(fadeOutDown) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include translate(0, 100%, 0);
    }
  }
}

@if $fadeOutDownBigUsed {
  @include keyframe(fadeOutDownBig) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include translate(0, 2000px, 0);
    }
  }
}

@if $fadeOutLeftUsed {
  @include keyframe(fadeOutLeft) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include translate(-100%, 0, 0);
    }
  }
}

@if $fadeOutLeftBigUsed {
  @include keyframe(fadeOutLeftBig) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include translate(-2000px, 0, 0);
    }
  }
}

@if $fadeOutRightUsed {
  @include keyframe(fadeOutRight) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include translate(100%, 0, 0);
    }
  }
}

@if $fadeOutRightBigUsed {
  @include keyframe(fadeOutRightBig) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include translate(2000px, 0, 0);
    }
  }
}

@if $fadeOutUpUsed {
  @include keyframe(fadeOutUp) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include translate(0, -100%, 0);
    }
  }
}

@if $fadeOutUpBigUsed {
  @include keyframe(fadeOutUpBig) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include translate(0, -2000px, 0);
    }
  }
}

@if $flipUsed {
  @include keyframe(flip) {
    from {
      @include transform(perspective(400px) rotate3d(0, 1, 0, -360deg));
      animation-timing-function: ease-out;
    }

    40% {
      @include transform(perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg));
      animation-timing-function: ease-out;
    }

    50% {
      @include transform(perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg));
      animation-timing-function: ease-in;
    }

    80% {
      @include transform(perspective(400px) scale3d(.95, .95, .95));
      animation-timing-function: ease-in;
    }

    to {
      @include transform(perspective(400px));
      animation-timing-function: ease-in;
    }
  }
}

@if $flipInXUsed {
  @include keyframe(flipInX) {
    from {
      @include transform(perspective(400px) rotate3d(1, 0, 0, 90deg));
      animation-timing-function: ease-in;
      opacity: 0;
    }

    40% {
      @include transform(perspective(400px) rotate3d(1, 0, 0, -20deg));
      animation-timing-function: ease-in;
    }

    60% {
      @include transform(perspective(400px) rotate3d(1, 0, 0, 10deg));
      opacity: 1;
    }

    80% {
      @include transform(perspective(400px) rotate3d(1, 0, 0, -5deg));
    }

    to {
      @include transform(perspective(400px));
    }
  }
}

@if $flipInYUsed {
  @include keyframe(flipInY) {
    from {
      @include transform(perspective(400px) rotate3d(0, 1, 0, 90deg));
      animation-timing-function: ease-in;
      opacity: 0;
    }

    40% {
      @include transform(perspective(400px) rotate3d(0, 1, 0, -20deg));
      animation-timing-function: ease-in;
    }

    60% {
      @include transform(perspective(400px) rotate3d(0, 1, 0, 10deg));
      opacity: 1;
    }

    80% {
      @include transform(perspective(400px) rotate3d(0, 1, 0, -5deg));
    }

    to {
      @include transform(perspective(400px));
    }
  }
}

@if $flipOutXUsed {
  @include keyframe(flipOutX) {
    from {
      @include transform(perspective(400px));
    }

    30% {
      @include transform(perspective(400px) rotate3d(1, 0, 0, -20deg));
      opacity: 1;
    }

    to {
      @include transform(perspective(400px) rotate3d(1, 0, 0, 90deg));
      opacity: 0;
    }
  }
}

@if $flipOutYUsed {
  @include keyframe(flipOutY) {
    from {
      @include transform(perspective(400px));
    }

    30% {
      @include transform(perspective(400px) rotate3d(0, 1, 0, -15deg));
      opacity: 1;
    }

    to {
      @include transform(perspective(400px) rotate3d(0, 1, 0, 90deg));
      opacity: 0;
    }
  }
}

@if $lightSpeedInUsed {
  @include keyframe(lightSpeedIn) {
    from {
      @include transform(translate3d(100%, 0, 0) skewX(- 30 deg));
      opacity: 0;
    }

    60% {
      @include transform(skewX(20deg));
      opacity: 1;
    }

    80% {
      @include transform(skewX(-5deg));
      opacity: 1;
    }

    to {
      @include transform(none);
      opacity: 1;
    }
  }
}

@if $lightSpeedOutUsed {
  @include keyframe(lightSpeedOut) {
    from {
      opacity: 1;
    }

    to {
      @include transform(translate3d(100%, 0, 0) skewX(30deg));
      opacity: 0;
    }
  }
}

@if $rotateInUsed {
  @include keyframe(rotateIn) {
    from {
      transform-origin: center;
      @include transform(rotate3d(0, 0, 1, -200deg));
      opacity: 0;
    }

    to {
      transform-origin: center;
      @include transform(none);
      opacity: 1;
    }
  }
}

@if $rotateInDownLeftUsed {
  @include keyframe(rotateInDownLeft) {
    from {
      transform-origin: left bottom;
      @include transform(rotate3d(0, 0, 1, -45deg));
      opacity: 0;
    }

    to {
      transform-origin: left bottom;
      @include transform(none);
      opacity: 1;
    }
  }
}

@if $rotateInDownRightUsed {
  @include keyframe(rotateInDownRight) {
    from {
      transform-origin: right bottom;
      @include transform(rotate3d(0, 0, 1, 45deg));
      opacity: 0;
    }

    to {
      transform-origin: right bottom;
      @include transform(none);
      opacity: 1;
    }
  }
}

@if $rotateInUpLeftUsed {
  @include keyframe(rotateInUpLeft) {
    from {
      transform-origin: left bottom;
      @include transform(rotate3d(0, 0, 1, 45deg));
      opacity: 0;
    }

    to {
      transform-origin: left bottom;
      @include transform(none);
      opacity: 1;
    }
  }
}

@if $rotateInUpRightUsed {
  @include keyframe(rotateInUpRight) {
    from {
      transform-origin: right bottom;
      @include transform(rotate3d(0, 0, 1, -90deg));
      opacity: 0;
    }

    to {
      transform-origin: right bottom;
      @include transform(none);
      opacity: 1;
    }
  }
}

@if $rotateOutUsed {
  @include keyframe(rotateOut) {
    from {
      transform-origin: center;
      opacity: 1;
    }

    to {
      transform-origin: center;
      @include transform(rotate3d(0, 0, 1, 200deg));
      opacity: 0;
    }
  }
}

@if $rotateOutDownLeftUsed {
  @include keyframe(rotateOutDownLeft) {
    from {
      transform-origin: left bottom;
      opacity: 1;
    }

    to {
      transform-origin: left bottom;
      @include transform(rotate3d(0, 0, 1, 45deg));
      opacity: 0;
    }
  }
}

@if $rotateOutDownRightUsed {
  @include keyframe(rotateOutDownRight) {
    from {
      transform-origin: right bottom;
      opacity: 1;
    }

    to {
      transform-origin: right bottom;
      @include transform(rotate3d(0, 0, 1, -45deg));
      opacity: 0;
    }
  }
}

@if $rotateOutUpLeftUsed {
  @include keyframe(rotateOutUpLeft) {
    from {
      transform-origin: left bottom;
      opacity: 1;
    }

    to {
      transform-origin: left bottom;
      @include transform(rotate3d(0, 0, 1, -45deg));
      opacity: 0;
    }
  }
}

@if $rotateOutUpRightUsed {
  @include keyframe(rotateOutUpRight) {
    from {
      transform-origin: right bottom;
      opacity: 1;
    }

    to {
      transform-origin: right bottom;
      @include transform(rotate3d(0, 0, 1, 90deg));
      opacity: 0;
    }
  }
}

@if $hingeUsed {
  @include keyframe(hinge) {
    0% {
      transform-origin: top left;
      animation-timing-function: ease-in-out;
    }

    20%, 60% {
      @include transform(rotate3d(0, 0, 1, 80deg));
      transform-origin: top left;
      animation-timing-function: ease-in-out;
    }

    40%, 80% {
      @include transform(rotate3d(0, 0, 1, 60deg));
      transform-origin: top left;
      animation-timing-function: ease-in-out;
      opacity: 1;
    }

    to {
      @include translate(0, 700px, 0);
      opacity: 0;
    }
  }
}

@if $jackInTheBoxUsed {
  @include keyframe(jackInTheBox) {
    from {
      opacity: 0;
      @include transform(scale(0.1) rotate(30deg));
      transform-origin: center bottom;
    }

    50% {
      @include transform(rotate(-10deg));
    }

    70% {
      @include transform(rotate(3deg));
    }

    to {
      opacity: 1;
      @include transform(scale(1));
    }
  }
}

@if $rollInUsed {
  @include keyframe(rollIn) {
    from {
      opacity: 0;
      @include transform(translate3d(-100%, 0, 0) rotate3d(0, 0, 1, - 120 deg));
    }

    to {
      opacity: 1;
      @include transform(none);
    }
  }
}

@if $rollOutUsed {
  @include keyframe(rollOut) {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
      @include transform(translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg));
    }
  }
}

@if $zoomInUsed {
  @include keyframe(zoomIn) {
    from {
      opacity: 0;
      @include transform(scale3d(.3, .3, .3));
    }

    50% {
      opacity: 1;
    }
  }
}

@if $zoomInDownUsed {
  @include keyframe(zoomInDown) {
    from {
      opacity: 0;
      @include transform(scale3d(.1, .1, .1) translate3d(0, -1000px, 0));
      animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    60% {
      opacity: 1;
      @include transform(scale3d(.475, .475, .475) translate3d(0, 60px, 0));
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
  }
}

@if $zoomInLeftUsed {
  @include keyframe(zoomInLeft) {
    from {
      opacity: 0;
      @include transform(scale3d(.1, .1, .1) translate3d(-1000px, 0, 0));
      animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    60% {
      opacity: 1;
      @include transform(scale3d(.475, .475, .475) translate3d(10px, 0, 0));
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
  }
}

@if $zoomInRightUsed {
  @include keyframe(zoomInRight) {
    from {
      opacity: 0;
      @include transform(scale3d(.1, .1, .1) translate3d(1000px, 0, 0));
      animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    60% {
      opacity: 1;
      @include transform(scale3d(.475, .475, .475) translate3d(-10px, 0, 0));
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
  }
}

@if $zoomInUpUsed {
  @include keyframe(zoomInUp) {
    from {
      opacity: 0;
      @include transform(scale3d(.1, .1, .1) translate3d(0, 1000px, 0));
      animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    60% {
      opacity: 1;
      @include transform(scale3d(.475, .475, .475) translate3d(0, -60px, 0));
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
  }
}

@if $zoomOutUsed {
  @include keyframe(zoomOut) {
    from {
      opacity: 1;
    }

    50% {
      opacity: 0;
      @include transform(scale3d(.3, .3, .3));
    }

    to {
      opacity: 0;
    }
  }
}

@if $zoomOutDownUsed {
  @include keyframe(zoomOutDown) {
    40% {
      opacity: 1;
      @include transform(scale3d(.475, .475, .475) translate3d(0, -60px, 0));
      animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    to {
      opacity: 0;
      @include transform(scale3d(.1, .1, .1) translate3d(0, 2000px, 0));
      transform-origin: center bottom;
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
  }
}

@if $zoomOutLeftUsed {
  @include keyframe(zoomOutLeft) {
    40% {
      opacity: 1;
      @include transform(scale3d(.475, .475, .475) translate3d(42px, 0, 0));
    }

    to {
      opacity: 0;
      @include transform(scale(.1) translate3d(-2000px, 0, 0));
      transform-origin: left center;
    }
  }

}

@if $zoomOutRightUsed {
  @include keyframe(zoomOutRight) {
    40% {
      opacity: 1;
      @include transform(scale3d(.475, .475, .475) translate3d(-42px, 0, 0));
    }

    to {
      opacity: 0;
      @include transform(scale(.1) translate3d(2000px, 0, 0));
      transform-origin: right center;
    }
  }
}

@if $zoomOutUpUsed {
  @include keyframe(zoomOutUp) {
    40% {
      opacity: 1;
      @include transform(scale3d(.475, .475, .475) translate3d(0, 60px, 0));
      animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    to {
      opacity: 0;
      @include transform(scale3d(.1, .1, .1) translate3d(0, -2000px, 0));
      transform-origin: center bottom;
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
  }
}

@if $slideInDownUsed {
  @include keyframe(slideInDown) {
    from {
      @include translate(0, -100%, 0);
      visibility: visible;
    }

    to {
      @include translate(0, 0, 0);
    }
  }
}

@if $slideInLeftUsed {
  @include keyframe(slideInLeft) {
    from {
      @include translate(-100%, 0, 0);
      visibility: visible;
    }

    to {
      @include translate(0, 0, 0);
    }
  }
}

@if $slideInRightUsed {
  @include keyframe(slideInRight) {
    from {
      @include translate(100%, 0, 0);
      visibility: visible;
    }

    to {
      @include translate(0, 0, 0);
    }
  }
}

@if $slideInUpUsed {
  @include keyframe(slideInUp) {
    from {
      @include translate(0, 100%, 0);
      visibility: visible;
    }

    to {
      @include translate(0, 0, 0);
    }
  }
}

@if $slideOutDownUsed {
  @include keyframe(slideOutDown) {
    from {
      @include translate(0, 0, 0);
    }

    to {
      visibility: hidden;
      @include translate(0, 100%, 0);
    }
  }
}

@if $slideOutLeftUsed {
  @include keyframe(slideOutLeft) {
    from {
      @include translate(0, 0, 0);
    }

    to {
      visibility: hidden;
      @include translate(-100%, 0, 0);
    }
  }
}