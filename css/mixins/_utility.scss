@mixin prefix($property, $value) {
	-webkit-#{$property}: #{$value};
	-moz-#{$property}: #{$value};
	-ms-#{$property}: #{$value};
	-o-#{$property}: #{$value};
	#{$property}: #{$value};
}

@mixin transition($transition: 0.1s all) {
	@include prefix('transition', #{$transition});
}

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

@mixin box-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $color: $default) {
	box-shadow: $x-axis $y-axis $blur $color;
}

@mixin transform($transforms) {
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

@mixin scale($x:0,$y:0,$z:0) {
	@include transform(scale3d($x, $y, $z));
}

@mixin translate($x, $y:0, $z:0) {
	@include transform(translate3d($x, $y, $z));
}

@mixin translateZ($z) {
	@include transform(translateZ($z));
}

@mixin rotate($deg) {
	@include transform(rotate(#{$deg}deg));
}

@mixin keyframe($animation_name) {
	@-webkit-keyframes #{$animation_name} {
		@content;
	}

	@-moz-keyframes #{$animation_name} {
		@content;
	}

	@keyframes #{$animation_name} {
		@content;
	}
}

@mixin backface-visibility($visibility) {
	-moz-backface-visibility: $visibility;
	-webkit-backface-visibility: $visibility;
	backface-visibility: $visibility;
}

@mixin hover-state {
	&:hover, &:active, &:focus {
		@content;
	}
}

@mixin animate($animation, $duration: 1s, $delay: 0, $timing: ease, $iteration: 1, $direction: normal, $fillMode: none, $playState: running) {
	-webkit-animation: $animation $duration $timing $delay $iteration $direction $fillMode $playState;
	-moz-animation: $animation $duration $timing $delay $iteration $direction $fillMode $playState;
	animation: $animation $duration $timing $delay $iteration $direction $fillMode $playState;
}

@mixin flexbox {
	display: -webkit-box;
	display: -moz-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
}

@mixin inline-flex {
	display: -webkit-inline-box;
	display: -moz-inline-box;
	display: -webkit-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
}

@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
		-moz-box-direction: reverse;
		-moz-box-orient: horizontal;
	} @else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
		-moz-box-direction: normal;
		-moz-box-orient: vertical;
	} @else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
		-moz-box-direction: reverse;
		-moz-box-orient: vertical;
	} @else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
		-moz-box-direction: normal;
		-moz-box-orient: horizontal;
	}
	-webkit-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}

@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-moz-box-align: start;
		-ms-flex-align: start;
	} @else if $value == flex-end {
		-webkit-box-align: end;
		-moz-box-align: end;
		-ms-flex-align: end;
	} @else {
		-webkit-box-align: $value;
		-moz-box-align: $value;
		-ms-flex-align: $value;
	}
	-webkit-align-items: $value;
	align-items: $value;
}

@mixin justify-content($value) {
	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	-ms-justify-content: $value;
	justify-content: $value;
	-ms-flex-pack: $value;
}